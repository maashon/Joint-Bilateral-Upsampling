# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yJlGxSebVZuiYfTywsf0cfscTL0T0AOV
"""

from google.colab import drive
drive.mount('/content/drive')

$ pip install --upgrade scikit-image
$ pip install --upgrade imutils

from skimage.metrics import structural_similarity as compare_ssim
import argparse
import imutils
import cv2
import numpy as np
import math

def PSNR(original, compressed):
    mse = np.mean((original - compressed) ** 2)
    if(mse == 0):  # MSE is zero means no noise is present in the signal .
                  # Therefore PSNR have no importance.
        return 100
    max_pixel = 255.0
    psnr = 20 * math.log10(max_pixel / math.sqrt(mse))
    return psnr

dir="/content/drive/MyDrive/colab/code/3dfs/data/"
datasetName="Dolls"
path=dir+datasetName+"/"

groundTruth=cv2.imread(path+"disp1.png")
dpDisparity=cv2.imread(path+"output-dp-disparity.png")
naiveDisparity=cv2.imread(path+"output-naive-disparity.png")
SBMDisparity=cv2.imread(path+"output-SBM-disparity.png")

gray_groundTruth=cv2.cvtColor(groundTruth, cv2.COLOR_BGR2GRAY)
gray_dpDisparity=cv2.cvtColor(dpDisparity, cv2.COLOR_BGR2GRAY)
gray_naiveDisparity=cv2.cvtColor(naiveDisparity, cv2.COLOR_BGR2GRAY)
gray_SBMDisparity=cv2.cvtColor(SBMDisparity, cv2.COLOR_BGR2GRAY)

(naive_score, naive_diff) = compare_ssim(gray_groundTruth, gray_naiveDisparity, full=True)
(dp_score, dp_diff) = compare_ssim(gray_groundTruth, gray_dpDisparity, full=True)
(SBM_score,SBM_diff) = compare_ssim(gray_groundTruth, gray_SBMDisparity, full=True)

psnrNaive=PSNR(gray_groundTruth, gray_naiveDisparity)
psnrDp=PSNR(gray_groundTruth, gray_dpDisparity)
PSNRSBM=PSNR(gray_groundTruth, gray_SBMDisparity)

print("SSIM Naive: {} DP: {} SBM: {}".format(naive_score,dp_score,SBM_score))
print("PSNR Naive: {} DP: {} SBM: {}".format(psnrNaive,psnrDp,PSNRSBM))